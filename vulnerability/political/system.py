import pandas as pd

from base.objects import Indicator, ConfigParser, GlobalBaseGrid
from base.datasets import VDemData, FHData
from utils.data_processing import process_yearly_data
from vulnerability.shared import VulnerabilityMixin


class VulPoliticalSystem(Indicator, VulnerabilityMixin):
    def __init__(
        self,
        config: ConfigParser,
        grid: GlobalBaseGrid,
        pillar: str = "VUL",
        dim: str = "political",
        id: str = "system",
    ):
        """Params defining indicator's place in index set to designed hierarchy by default"""
        self.vdem = VDemData(config=config)
        self.freedomhouse = FHData(config=config)
        super().__init__(pillar=pillar, dim=dim, id=id, config=config, grid=grid)

    def load_data(self) -> tuple[pd.DataFrame, pd.DataFrame]:
        df_vdem = self.vdem.load_data(["v2x_civlib", "v2x_polyarchy"])
        df_free = self.freedomhouse.load_data()
        return df_vdem, df_free

    def preprocess_data(self, input_data: tuple[pd.DataFrame, pd.DataFrame]) -> pd.DataFrame:
        df_vdem, df_free = input_data
        df_free = self.freedomhouse.preprocess_data(df_free)
        df_vdem = self.vdem.preprocess_data(df_vdem)
        df_base = self.create_base_df()
        # combine data and merge to index structure
        df_yearly = pd.concat([df_vdem, df_free], axis=1)
        df_yearly = self.clip_fill_data(df_yearly, resolution="cy", require_all=False)
        df_preprocessed = process_yearly_data(df_base, df_yearly, df_yearly.columns)
        return df_preprocessed

    def create_indicator(self, df) -> tuple[pd.DataFrame, pd.DataFrame]:
        df[self.composite_id] = 1 - df[
            ["v2x_civlib", "v2x_polyarchy", "political_rights_percent", "civil_liberties_percent"]
        ].mean(axis=1)
        return df

    def normalize(self, df_indicator: pd.DataFrame) -> pd.DataFrame:
        """No normalization necessary since 0-1 index scores."""
        return df_indicator[[self.composite_id]]


if __name__ == "__main__":
    config = ConfigParser()
    grid = GlobalBaseGrid(config)
    indicator = VulPoliticalSystem(config=config, grid=grid)
    indicator.run()
